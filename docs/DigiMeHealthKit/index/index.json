{"includedArchiveIdentifiers":["digimehealthkit.DigiMeHealthKit"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/digimehealthkit","title":"DigiMeHealthKit Module","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitaccountdataprovider\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitaccountdataprovider\/metadata","title":"var metadata: LogEventMeta","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitaccountdataprovider\/sourceaccount","title":"var sourceAccount: SourceAccount","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitaccountdataprovider\/sourceaccountdata","title":"var sourceAccountData: SourceAccountData","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkitaccountdataprovider","title":"HealthKitAccountDataProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitfilesdataservice\/init(account:healthkitservice:)","title":"init(account: SourceAccount, healthKitService: HealthKitServiceProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitfilesdataservice\/querydata(from:to:downloadhandler:completion:)","title":"func queryData(from: Date, to: Date, downloadHandler: ((Result<File, SDKError>) -> Void)?, completion: ((Result<[FileListItem], SDKError>) -> Void)?)","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthkitfilesdataservice","title":"HealthKitFilesDataService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitmanager\/executequery(_:)","title":"func executeQuery(Query)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitmanager\/preferredunits(for:completion:)","title":"func preferredUnits(for: [QuantityType], completion: PreferredUnitsCompeltion)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitmanager\/requestauthorization(toread:towrite:completion:)","title":"func requestAuthorization(toRead: [ObjectType], toWrite: [SampleType], completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitmanager\/startwatchapp(with:completion:)","title":"func startWatchApp(with: WorkoutConfiguration, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitmanager\/stopquery(_:)","title":"func stopQuery(Query)","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthkitmanager","title":"HealthKitManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitobserver\/disableallbackgrounddelivery(completionhandler:)","title":"func disableAllBackgroundDelivery(completionHandler: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitobserver\/disablebackgrounddelivery(type:completionhandler:)","title":"func disableBackgroundDelivery(type: ObjectType, completionHandler: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitobserver\/enablebackgrounddelivery(type:frequency:completionhandler:)","title":"func enableBackgroundDelivery(type: ObjectType, frequency: UpdateFrequency, completionHandler: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitobserver\/observerquery(type:predicate:updatehandler:)","title":"func observerQuery(type: SampleType, predicate: NSPredicate?, updateHandler: ObserverUpdateHandler) throws -> ObserverQuery","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthkitobserver","title":"HealthKitObserver","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/anchoredobjectquery(type:predicate:anchor:limit:monitorupdates:completionhandler:)","title":"func anchoredObjectQuery(type: SampleType, predicate: NSPredicate?, anchor: Anchor?, limit: Int, monitorUpdates: Bool, completionHandler: AnchoredResultsHandler) throws -> AnchoredObjectQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/categoryquery(type:predicate:sortdescriptors:limit:resultshandler:)","title":"func categoryQuery(type: CategoryType, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: CategoryResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/characteristics()","title":"func characteristics() -> Characteristic","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/correlationquery(type:predicate:sortdescriptors:limit:resultshandler:)","title":"func correlationQuery(type: CorrelationType, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: CorrelationResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/correlationquery(type:predicate:typepredicates:completionhandler:)","title":"func correlationQuery(type: CorrelationType, predicate: NSPredicate?, typePredicates: [String : NSPredicate]?, completionHandler: CorrelationCompletionHandler) throws -> CorrelationQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/electrocardiogramquery(predicate:sortdescriptors:limit:withvoltagemeasurements:resultshandler:)","title":"func electrocardiogramQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, withVoltageMeasurements: Bool, resultsHandler: ElectrocardiogramResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/heartbeatseriesquery(predicate:sortdescriptors:limit:resultshandler:)","title":"func heartbeatSeriesQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: HeartbeatSeriesResultsDataHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/quantityquery(type:unit:predicate:sortdescriptors:limit:resultshandler:)","title":"func quantityQuery(type: QuantityType, unit: String, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: QuantityResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/queryactivitysummary(predicate:monitorupdates:completionhandler:)","title":"func queryActivitySummary(predicate: NSPredicate?, monitorUpdates: Bool, completionHandler: ActivitySummaryCompletionHandler) -> ActivitySummaryQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/samplequery(type:predicate:sortdescriptors:limit:resultshandler:)","title":"func sampleQuery(type: SampleType, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: SampleResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/sourcequery(type:predicate:completionhandler:)","title":"func sourceQuery(type: SampleType, predicate: NSPredicate?, completionHandler: SourceCompletionHandler) throws -> SourceQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/statisticscollectionquery(type:unit:quantitysamplepredicate:anchordate:enumeratefrom:enumerateto:intervalcomponents:mergeresultforsametype:monitorupdates:enumerationblock:)","title":"func statisticsCollectionQuery(type: QuantityType, unit: String, quantitySamplePredicate: NSPredicate?, anchorDate: Date, enumerateFrom: Date, enumerateTo: Date, intervalComponents: DateComponents, mergeResultForSameType: Bool, monitorUpdates: Bool, enumerationBlock: StatisticsCompletionHandler) throws -> StatisticsCollectionQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/statisticsquery(type:unit:predicate:completionhandler:)","title":"func statisticsQuery(type: QuantityType, unit: String, predicate: NSPredicate?, completionHandler: StatisticsCompletionHandler) throws -> StatisticsQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/workoutquery(predicate:sortdescriptors:limit:resultshandler:)","title":"func workoutQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: WorkoutResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitreader\/workoutroutequery(predicate:sortdescriptors:limit:resultshandler:)","title":"func workoutRouteQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: WorkoutRouteResultsDataHandler) throws -> SampleQuery","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthkitreader","title":"HealthKitReader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/manager","title":"let manager: HealthKitManager","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/observer","title":"let observer: HealthKitObserver","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/reader","title":"let reader: HealthKitReader","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/writer","title":"let writer: HealthKitWriter","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/addtestdata(completion:)","title":"func addTestData(completion: (_ success: Bool, _ error: Error?) -> Void)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/reporterrorlog(error:)","title":"func reportErrorLog(error: Error?)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitservice\/requestauthorization(typestoread:typestowrite:completion:)","title":"func requestAuthorization(typesToRead: [ReadableObjectType], typesToWrite: [WritableSampleType], completion: (Bool, Error?) -> Void)","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthkitservice","title":"HealthKitService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/addcategory(_:from:to:completion:)","title":"func addCategory([Category], from: Device?, to: Workout, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/addquantity(_:from:to:completion:)","title":"func addQuantity([Quantity], from: Device?, to: Workout, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/delete(sample:completion:)","title":"func delete(sample: Sample, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/deleteobjects(of:predicate:completion:)","title":"func deleteObjects(of: ObjectType, predicate: NSPredicate, completion: DeletionCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/isauthorizedtowrite(type:)","title":"func isAuthorizedToWrite(type: ObjectType) throws -> Bool","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/save(sample:completion:)","title":"func save(sample: Sample, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthkitwriter\/savedata(_:completion:)","title":"func saveData([HKObject], completion: (_ success: Bool, _ error: Error?) -> Void)","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthkitwriter","title":"HealthKitWriter","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/objecttype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/objecttype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/objecttype","title":"ObjectType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/payload\/make(from:)","title":"static func make(from: [String : Any]) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/payload","title":"Payload","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/payloadidentifiable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/payloadidentifiable\/identifier","title":"var identifier: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/payloadidentifiable","title":"PayloadIdentifiable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sample\/endtimestamp","title":"var endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/sample\/starttimestamp","title":"var startTimestamp: Double","type":"property"}],"path":"\/documentation\/digimehealthkit\/sample","title":"Sample","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sampletype\/identifier","title":"var identifier: String?","type":"property"}],"path":"\/documentation\/digimehealthkit\/sampletype","title":"SampleType","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/unitconvertable\/converted(to:)","title":"func converted(to: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/unitconvertable","title":"UnitConvertable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/activeenergyburned","title":"let activeEnergyBurned: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/activeenergyburnedgoal","title":"let activeEnergyBurnedGoal: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/activeenergyburnedunit","title":"let activeEnergyBurnedUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/appleexercisetime","title":"let appleExerciseTime: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/appleexercisetimegoal","title":"let appleExerciseTimeGoal: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/appleexercisetimeunit","title":"let appleExerciseTimeUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/applestandhours","title":"let appleStandHours: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/applestandhoursgoal","title":"let appleStandHoursGoal: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/applestandhoursunit","title":"let appleStandHoursUnit: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.struct","title":"ActivitySummary.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/date","title":"let date: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/identifier","title":"let identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/activitysummary\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/activitysummary\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/activitysummary","title":"ActivitySummary","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/init(value:description:detail:metadata:)","title":"init(value: Int, description: String, detail: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/detail","title":"let detail: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/value","title":"let value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/copywith(value:description:detail:metadata:)","title":"func copyWith(value: Int?, description: String?, detail: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Category.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.struct","title":"Category.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/category\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, harmonized: Harmonized?) -> Category","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/collect(from:)","title":"static func collect(from: [Any]) throws -> [Category]","type":"method"},{"path":"\/documentation\/digimehealthkit\/category\/collect(results:)","title":"static func collect(results: [HKSample]) -> [Category]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/category\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/category\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/category\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/category\/make(from:)","title":"static func make(from: [String : Any]) throws -> Category","type":"method"}],"path":"\/documentation\/digimehealthkit\/category\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/category","title":"Category","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristic\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristic\/activitymovemode","title":"let activityMoveMode: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/characteristic\/biologicalsex","title":"let biologicalSex: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/characteristic\/birthday","title":"let birthday: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/characteristic\/bloodtype","title":"let bloodType: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/characteristic\/fitzpatrickskintype","title":"let fitzpatrickSkinType: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/characteristic\/wheelchairuse","title":"let wheelchairUse: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristic\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/characteristic\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristic\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/characteristic\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/characteristic\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/characteristic","title":"Characteristic","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/init(quantitysamples:categorysamples:metadata:)","title":"init(quantitySamples: [Quantity], categorySamples: [Category], metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/categorysamples","title":"let categorySamples: [Category]","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/quantitysamples","title":"let quantitySamples: [Quantity]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/copywith(quantitysamples:categorysamples:metadata:)","title":"func copyWith(quantitySamples: [Quantity]?, categorySamples: [Category]?, metadata: Metadata?) -> Correlation.Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Correlation.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.struct","title":"Correlation.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/correlation\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Correlation.Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, harmonized: Harmonized?) -> Correlation","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/collect(results:)","title":"static func collect(results: [HKSample]) -> [Correlation]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlation\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/correlation\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/correlation\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlation\/make(from:)","title":"static func make(from: [String : Any]) throws -> Correlation","type":"method"}],"path":"\/documentation\/digimehealthkit\/correlation\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/correlation","title":"Correlation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/uuid","title":"let uuid: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/collect(deletedobjects:)","title":"static func collect(deletedObjects: [HKDeletedObject]?) -> [DeletedObject]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/deletedobject\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/deletedobject\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/deletedobject","title":"DeletedObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/device\/init(name:manufacturer:model:hardwareversion:firmwareversion:softwareversion:localidentifier:udideviceidentifier:)","title":"init(name: String?, manufacturer: String?, model: String?, hardwareVersion: String?, firmwareVersion: String?, softwareVersion: String?, localIdentifier: String?, udiDeviceIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/firmwareversion","title":"let firmwareVersion: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/hardwareversion","title":"let hardwareVersion: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/localidentifier","title":"let localIdentifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/manufacturer","title":"let manufacturer: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/model","title":"let model: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/softwareversion","title":"let softwareVersion: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/udideviceidentifier","title":"let udiDeviceIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/copywith(name:manufacturer:model:hardwareversion:firmwareversion:softwareversion:localidentifier:udideviceidentifier:)","title":"func copyWith(name: String?, manufacturer: String?, model: String?, hardwareVersion: String?, firmwareVersion: String?, softwareVersion: String?, localIdentifier: String?, udiDeviceIdentifier: String?) -> Device","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/local()","title":"static func local() -> Device","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/device\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/device\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/device\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/device\/make(from:)","title":"static func make(from: [String : Any]) throws -> Device","type":"method"}],"path":"\/documentation\/digimehealthkit\/device\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/device","title":"Device","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/averageheartrate","title":"let averageHeartRate: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/averageheartrateunit","title":"let averageHeartRateUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/classification","title":"let classification: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/samplingfrequency","title":"let samplingFrequency: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/samplingfrequencyunit","title":"let samplingFrequencyUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/symptomsstatus","title":"let symptomsStatus: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/voltagemeasurements","title":"let voltageMeasurements: [VoltageMeasurement]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.struct","title":"Electrocardiogram.Harmonized","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/value","title":"let value: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram.VoltageMeasurement.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct","title":"Electrocardiogram.VoltageMeasurement.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/timesincesamplestart","title":"let timeSinceSampleStart: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram.VoltageMeasurement","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/voltagemeasurement","title":"Electrocardiogram.VoltageMeasurement","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/numberofmeasurements","title":"let numberOfMeasurements: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogram\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/electrocardiogram","title":"Electrocardiogram","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/account","title":"var account: SourceAccount","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/data","title":"var data: [String : [FitnessActivitySummary]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/healthdataoperationresult\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/healthdataoperationresult","title":"HealthDataOperationResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/init(typestoread:typestowrite:startdate:enddate:anchordate:mergeresultforsametype:singlecallbackforalltypes:intervalcomponents:)","title":"init(typesToRead: [ObjectType], typesToWrite: [QuantityType], startDate: Date, endDate: Date, anchorDate: Date?, mergeResultForSameType: Bool, singleCallbackForAllTypes: Bool, intervalComponents: DateComponents?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/anchordate","title":"let anchorDate: Date?","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/enddate","title":"let endDate: Date","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/intervalcomponents","title":"let intervalComponents: DateComponents?","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/mergeresultforsametype","title":"let mergeResultForSameType: Bool","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/singlecallbackforalltypes","title":"let singleCallbackForAllTypes: Bool","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/startdate","title":"let startDate: Date","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/typestoread","title":"let typesToRead: [ObjectType]","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkitconfiguration\/typestowrite","title":"let typesToWrite: [QuantityType]","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkitconfiguration","title":"HealthKitConfiguration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/init(count:measurements:metadata:)","title":"init(count: Int, measurements: [Measurement], metadata: Metadata?)","type":"init"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/measurements","title":"let measurements: [Measurement]","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/copywith(count:measurements:metadata:)","title":"func copyWith(count: Int?, measurements: [Measurement]?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> HeartbeatSeries.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.struct","title":"HeartbeatSeries.Harmonized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/init(timesinceseriesstart:precededbygap:done:)","title":"init(timeSinceSeriesStart: Double, precededByGap: Bool, done: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/done","title":"let done: Bool","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/precededbygap","title":"let precededByGap: Bool","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/timesinceseriesstart","title":"let timeSinceSeriesStart: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/collect(from:)","title":"static func collect(from: [Any]) throws -> [HeartbeatSeries.Measurement]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/make(from:)","title":"static func make(from: [String : Any]) throws -> HeartbeatSeries.Measurement","type":"method"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/measurement","title":"HeartbeatSeries.Measurement","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/heartbeatseries\/make(from:)","title":"static func make(from: [String : Any]) throws -> HeartbeatSeries","type":"method"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/heartbeatseries","title":"HeartbeatSeries","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/init(identifier:unit:)","title":"init(identifier: String, unit: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/unit","title":"let unit: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/collect(from:)-6xnsj","title":"static func collect(from: [HKQuantityType : HKUnit]) -> [PreferredUnit]","type":"method"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/collect(from:)-7kww1","title":"static func collect(from: [QuantityType : String]) -> [PreferredUnit]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/preferredunit\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/preferredunit\/make(from:)","title":"static func make(from: [String : Any]) throws -> PreferredUnit","type":"method"}],"path":"\/documentation\/digimehealthkit\/preferredunit\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/preferredunit","title":"PreferredUnit","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/init(value:unit:metadata:)","title":"init(value: Double, unit: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/value","title":"let value: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/copywith(value:unit:metadata:)","title":"func copyWith(value: Double?, unit: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Quantity.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.struct","title":"Quantity.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/quantity\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, harmonized: Harmonized?) -> Quantity","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/collect(from:)","title":"static func collect(from: [Any]) throws -> [Quantity]","type":"method"},{"path":"\/documentation\/digimehealthkit\/quantity\/collect(results:unit:)","title":"static func collect(results: [HKSample], unit: HKUnit) -> [Quantity]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantity\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/quantity\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantity\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/make(from:)","title":"static func make(from: [String : Any]) throws -> Quantity","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantity\/payload-implementations","title":"Payload Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantity\/converted(to:)","title":"func converted(to: String) throws -> Quantity","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantity\/unitconvertable-implementations","title":"UnitConvertable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/quantity","title":"Quantity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/source\/init(name:bundleidentifier:)","title":"init(name: String, bundleIdentifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/bundleidentifier","title":"let bundleIdentifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/source\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/source\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/copywith(name:bundleidentifier:)","title":"func copyWith(name: String?, bundleIdentifier: String?) -> Source","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/source\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/source\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/source\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/source\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/source\/make(from:)","title":"static func make(from: [String : Any]) throws -> Source","type":"method"}],"path":"\/documentation\/digimehealthkit\/source\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/source","title":"Source","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/init(majorversion:minorversion:patchversion:)","title":"init(majorVersion: Int, minorVersion: Int, patchVersion: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/majorversion","title":"let majorVersion: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/minorversion","title":"let minorVersion: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/patchversion","title":"let patchVersion: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/copywith(majorversion:minorversion:patchversion:)","title":"func copyWith(majorVersion: Int?, minorVersion: Int?, patchVersion: Int?) -> OperatingSystem","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> SourceRevision.OperatingSystem","type":"method"}],"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.struct","title":"SourceRevision.OperatingSystem","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/init(source:version:producttype:systemversion:operatingsystem:)","title":"init(source: Source, version: String?, productType: String?, systemVersion: String, operatingSystem: OperatingSystem)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/operatingsystem-swift.property","title":"let operatingSystem: OperatingSystem","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/producttype","title":"let productType: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/source","title":"let source: Source","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/systemversion","title":"let systemVersion: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/version","title":"let version: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/copywith(source:version:producttype:systemversion:operatingsystem:)","title":"func copyWith(source: Source?, version: String?, productType: String?, systemVersion: String?, operatingSystem: OperatingSystem?) -> SourceRevision","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/sourcerevision\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/sourcerevision\/make(from:)","title":"static func make(from: [String : Any]) throws -> SourceRevision","type":"method"}],"path":"\/documentation\/digimehealthkit\/sourcerevision\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/sourcerevision","title":"SourceRevision","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/init(summary:average:recent:min:max:unit:)","title":"init(summary: Double?, average: Double?, recent: Double?, min: Double?, max: Double?, unit: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/average","title":"var average: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/max","title":"var max: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/min","title":"var min: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/recent","title":"var recent: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/summary","title":"var summary: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/copywith(summary:average:recent:min:max:unit:)","title":"func copyWith(summary: Double?, average: Double?, recent: Double?, min: Double?, max: Double?, unit: String?) -> Harmonized","type":"method"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/mergevalues(of:with:)","title":"func mergeValues(of: Harmonized, with: Harmonized) throws -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.struct","title":"Statistics.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/harmonized-swift.property","title":"var harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/sources","title":"var sources: [Source]","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/copywith(identifier:starttimestamp:endtimestamp:harmonized:sources:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, harmonized: Harmonized?, sources: [Source]?) -> Statistics","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/statistics\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/statistics\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/statistics\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/statistics\/converted(to:)","title":"func converted(to: String) throws -> Statistics","type":"method"}],"path":"\/documentation\/digimehealthkit\/statistics\/unitconvertable-implementations","title":"UnitConvertable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/statistics","title":"Statistics","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/dateissuedtimestamp","title":"let dateIssuedTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/expirationdatetimestamp","title":"let expirationDateTimestamp: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/prescriptiontype","title":"let prescriptionType: PrescriptionType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> VisionPrescription.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.struct","title":"VisionPrescription.Harmonized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/detail","title":"let detail: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/id","title":"let id: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/make(from:)","title":"static func make(from: [String : Any]) throws -> VisionPrescription.PrescriptionType","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/prescriptiontype","title":"VisionPrescription.PrescriptionType","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescription\/make(from:)","title":"static func make(from: [String : Any]) throws -> VisionPrescription","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescription\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/visionprescription","title":"VisionPrescription","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/init(value:description:totalenergyburned:totalenergyburnedunit:totaldistance:totaldistanceunit:totalswimmingstrokecount:totalswimmingstrokecountunit:totalflightsclimbed:totalflightsclimbedunit:metadata:)","title":"init(value: Int, description: String, totalEnergyBurned: Double?, totalEnergyBurnedUnit: String, totalDistance: Double?, totalDistanceUnit: String, totalSwimmingStrokeCount: Double?, totalSwimmingStrokeCountUnit: String, totalFlightsClimbed: Double?, totalFlightsClimbedUnit: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totaldistance","title":"let totalDistance: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totaldistanceunit","title":"let totalDistanceUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totalenergyburned","title":"let totalEnergyBurned: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totalenergyburnedunit","title":"let totalEnergyBurnedUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totalflightsclimbed","title":"let totalFlightsClimbed: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totalflightsclimbedunit","title":"let totalFlightsClimbedUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totalswimmingstrokecount","title":"let totalSwimmingStrokeCount: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/totalswimmingstrokecountunit","title":"let totalSwimmingStrokeCountUnit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/value","title":"let value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/copywith(value:description:totalenergyburned:totalenergyburnedunit:totaldistance:totaldistanceunit:totalswimmingstrokecount:totalswimmingstrokecountunit:totalflightsclimbed:totalflightsclimbedunit:metadata:)","title":"func copyWith(value: Int?, description: String?, totalEnergyBurned: Double?, totalEnergyBurnedUnit: String?, totalDistance: Double?, totalDistanceUnit: String?, totalSwimmingStrokeCount: Double?, totalSwimmingStrokeCountUnit: String?, totalFlightsClimbed: Double?, totalFlightsClimbedUnit: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Workout.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.struct","title":"Workout.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workout\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:duration:workoutevents:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, duration: Double, workoutEvents: [WorkoutEvent], harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/workoutevents","title":"let workoutEvents: [WorkoutEvent]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:duration:workoutevents:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, duration: Double?, workoutEvents: [WorkoutEvent]?, harmonized: Harmonized?) -> Workout","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/collect(results:)","title":"static func collect(results: [HKSample]) -> [Workout]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workout\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workout\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workout\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workout\/make(from:)","title":"static func make(from: [String : Any]) throws -> Workout","type":"method"}],"path":"\/documentation\/digimehealthkit\/workout\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workout","title":"Workout","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/init(value:unit:)","title":"init(value: Double, unit: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/value","title":"let value: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutConfiguration.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.struct","title":"WorkoutConfiguration.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/init(activityvalue:locationvalue:swimmingvalue:harmonized:)","title":"init(activityValue: Int, locationValue: Int, swimmingValue: Int, harmonized: Harmonized)","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/activityvalue","title":"let activityValue: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/locationvalue","title":"let locationValue: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/swimmingvalue","title":"let swimmingValue: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutConfiguration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutconfiguration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutconfiguration","title":"WorkoutConfiguration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/init(value:description:metadata:)","title":"init(value: Int, description: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/value","title":"let value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/copywith(value:description:metadata:)","title":"func copyWith(value: Int?, description: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutEvent.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.struct","title":"WorkoutEvent.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/init(starttimestamp:endtimestamp:duration:harmonized:)","title":"init(startTimestamp: Double, endTimestamp: Double, duration: Double, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/copywith(starttimestamp:endtimestamp:duration:harmonized:)","title":"func copyWith(startTimestamp: Double?, endTimestamp: Double?, duration: Double?, harmonized: Harmonized?) -> WorkoutEvent","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutevent\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutevent\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutEvent","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutevent\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutevent","title":"WorkoutEvent","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/init(count:routes:metadata:)","title":"init(count: Int, routes: [Route], metadata: Metadata?)","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/routes","title":"let routes: [Route]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/copywith(count:routes:metadata:)","title":"func copyWith(count: Int?, routes: [Route]?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute.Harmonized","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.struct","title":"WorkoutRoute.Harmonized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/init(latitude:longitude:altitude:course:courseaccuracy:floor:horizontalaccuracy:speed:speedaccuracy:timestamp:verticalaccuracy:)","title":"init(latitude: Double, longitude: Double, altitude: Double, course: Double, courseAccuracy: Double?, floor: Int?, horizontalAccuracy: Double, speed: Double, speedAccuracy: Double?, timestamp: Double, verticalAccuracy: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/altitude","title":"let altitude: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/course","title":"let course: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/courseaccuracy","title":"let courseAccuracy: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/floor","title":"let floor: Int?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/horizontalaccuracy","title":"let horizontalAccuracy: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/longitude","title":"let longitude: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/speed","title":"let speed: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/speedaccuracy","title":"let speedAccuracy: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/timestamp","title":"let timestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/verticalaccuracy","title":"let verticalAccuracy: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/collect(from:)","title":"static func collect(from: [Any]) throws -> [WorkoutRoute.Location]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute.Location","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/location\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/location","title":"WorkoutRoute.Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/init(locations:done:)","title":"init(locations: [Location], done: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/done","title":"let done: Bool","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/locations","title":"let locations: [Location]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/collect(from:)","title":"static func collect(from: [Any]) throws -> [WorkoutRoute.Route]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute.Route","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/route\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/route","title":"WorkoutRoute.Route","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workoutroute\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute","type":"method"}],"path":"\/documentation\/digimehealthkit\/workoutroute\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workoutroute","title":"WorkoutRoute","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarycompletionhandler","title":"ActivitySummaryCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/activitysummaryquery","title":"ActivitySummaryQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/anchor","title":"Anchor","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/anchoredobjectquery","title":"AnchoredObjectQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/anchoredresultshandler","title":"AnchoredResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/categoryresultshandler","title":"CategoryResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/correlationcompletionhandler","title":"CorrelationCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/correlationquery","title":"CorrelationQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/correlationresultshandler","title":"CorrelationResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/deletioncompletionblock","title":"DeletionCompletionBlock","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramresultshandler","title":"ElectrocardiogramResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/heartbeatseriesresultsdatahandler","title":"HeartbeatSeriesResultsDataHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/observerquery","title":"ObserverQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/observerupdatehandler","title":"ObserverUpdateHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/preferredunitscompeltion","title":"PreferredUnitsCompeltion","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/quantityresultshandler","title":"QuantityResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/query","title":"Query","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/samplequery","title":"SampleQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/sampleresultshandler","title":"SampleResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/sourcecompletionhandler","title":"SourceCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/sourcequery","title":"SourceQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/statisticscollectionquery","title":"StatisticsCollectionQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/statisticscompletionhandler","title":"StatisticsCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/statisticsquery","title":"StatisticsQuery","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/statuscompletionblock","title":"StatusCompletionBlock","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/workoutresultshandler","title":"WorkoutResultsHandler","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/workoutrouteresultsdatahandler","title":"WorkoutRouteResultsDataHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/activitysummarytype","title":"case activitySummaryType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/activitysummarytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/activitysummarytype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/activitysummarytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/activitysummarytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/activitysummarytype","title":"ActivitySummaryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/abdominalcramps","title":"case abdominalCramps","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/acne","title":"case acne","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/appetitechanges","title":"case appetiteChanges","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/applestandhour","title":"case appleStandHour","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/applewalkingsteadinessevent","title":"case appleWalkingSteadinessEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/bladderincontinence","title":"case bladderIncontinence","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/bloating","title":"case bloating","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/breastpain","title":"case breastPain","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/cervicalmucusquality","title":"case cervicalMucusQuality","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/chesttightnessorpain","title":"case chestTightnessOrPain","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/chills","title":"case chills","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/constipation","title":"case constipation","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/contraceptive","title":"case contraceptive","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/coughing","title":"case coughing","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/diarrhea","title":"case diarrhea","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/dizziness","title":"case dizziness","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/dryskin","title":"case drySkin","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/environmentalaudioexposureevent","title":"case environmentalAudioExposureEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/fainting","title":"case fainting","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/fatigue","title":"case fatigue","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/fever","title":"case fever","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/generalizedbodyache","title":"case generalizedBodyAche","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/hairloss","title":"case hairLoss","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/handwashingevent","title":"case handwashingEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/headache","title":"case headache","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/headphoneaudioexposureevent","title":"case headphoneAudioExposureEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/heartburn","title":"case heartburn","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/highheartrateevent","title":"case highHeartRateEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/hotflashes","title":"case hotFlashes","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/infrequentmenstrualcycles","title":"case infrequentMenstrualCycles","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/intermenstrualbleeding","title":"case intermenstrualBleeding","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/irregularheartrhythmevent","title":"case irregularHeartRhythmEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/irregularmenstrualcycles","title":"case irregularMenstrualCycles","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/lactation","title":"case lactation","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/lossofsmell","title":"case lossOfSmell","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/lossoftaste","title":"case lossOfTaste","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/lowcardiofitnessevent","title":"case lowCardioFitnessEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/lowheartrateevent","title":"case lowHeartRateEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/lowerbackpain","title":"case lowerBackPain","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/memorylapse","title":"case memoryLapse","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/menstrualflow","title":"case menstrualFlow","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/mindfulsession","title":"case mindfulSession","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/moodchanges","title":"case moodChanges","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/nausea","title":"case nausea","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/nightsweats","title":"case nightSweats","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/ovulationtestresult","title":"case ovulationTestResult","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/pelvicpain","title":"case pelvicPain","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/persistentintermenstrualbleeding","title":"case persistentIntermenstrualBleeding","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/pregnancy","title":"case pregnancy","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/pregnancytestresult","title":"case pregnancyTestResult","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/progesteronetestresult","title":"case progesteroneTestResult","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/prolongedmenstrualperiods","title":"case prolongedMenstrualPeriods","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/rapidpoundingorflutteringheartbeat","title":"case rapidPoundingOrFlutteringHeartbeat","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/runnynose","title":"case runnyNose","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/sexualactivity","title":"case sexualActivity","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/shortnessofbreath","title":"case shortnessOfBreath","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/sinuscongestion","title":"case sinusCongestion","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/skippedheartbeat","title":"case skippedHeartbeat","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/sleepanalysis","title":"case sleepAnalysis","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/sleepchanges","title":"case sleepChanges","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/sorethroat","title":"case soreThroat","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/toothbrushingevent","title":"case toothbrushingEvent","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/vaginaldryness","title":"case vaginalDryness","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/vomiting","title":"case vomiting","type":"case"},{"path":"\/documentation\/digimehealthkit\/categorytype\/wheezing","title":"case wheezing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/categorytype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/categorytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/categorytype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/categorytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/categorytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/categorytype","title":"CategoryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/activitymovemode","title":"case activityMoveMode","type":"case"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/biologicalsex","title":"case biologicalSex","type":"case"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/bloodtype","title":"case bloodType","type":"case"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/dateofbirth","title":"case dateOfBirth","type":"case"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/fitzpatrickskintype","title":"case fitzpatrickSkinType","type":"case"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/wheelchairuse","title":"case wheelchairUse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/characteristictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/characteristictype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/characteristictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/characteristictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/characteristictype","title":"CharacteristicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/bloodpressure","title":"case bloodPressure","type":"case"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/food","title":"case food","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/correlationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/correlationtype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/correlationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/correlationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/correlationtype","title":"CorrelationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/cda","title":"case cda","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/documenttype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/documenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/documenttype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/documenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/documenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/documenttype","title":"DocumentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/electrocardiogramtype","title":"case electrocardiogramType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/electrocardiogramtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/electrocardiogramtype","title":"ElectrocardiogramType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/date(dictionary:)","title":"case date(dictionary: [String : Date]?)","type":"case"},{"path":"\/documentation\/digimehealthkit\/metadata\/double(dictionary:)","title":"case double(dictionary: [String : Double]?)","type":"case"},{"path":"\/documentation\/digimehealthkit\/metadata\/string(dictionary:)","title":"case string(dictionary: [String : String]?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/original","title":"var original: [String : Any]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimehealthkit\/metadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimehealthkit\/metadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimehealthkit\/metadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/metadata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/key","title":"Metadata.Key","type":"typealias"},{"path":"\/documentation\/digimehealthkit\/metadata\/value","title":"Metadata.Value","type":"typealias"}],"path":"\/documentation\/digimehealthkit\/metadata\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/metadata\/make(from:)","title":"static func make(from: [String : Any]) throws -> Metadata","type":"method"}],"path":"\/documentation\/digimehealthkit\/metadata\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/metadata","title":"Metadata","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/activeenergyburned","title":"case activeEnergyBurned","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/appleexercisetime","title":"case appleExerciseTime","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/applemovetime","title":"case appleMoveTime","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/applesleepingwristtemperature","title":"case appleSleepingWristTemperature","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/applestandtime","title":"case appleStandTime","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/applewalkingsteadiness","title":"case appleWalkingSteadiness","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/atrialfibrillationburden","title":"case atrialFibrillationBurden","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/basalbodytemperature","title":"case basalBodyTemperature","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/basalenergyburned","title":"case basalEnergyBurned","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bloodalcoholcontent","title":"case bloodAlcoholContent","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bloodglucose","title":"case bloodGlucose","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bloodpressurediastolic","title":"case bloodPressureDiastolic","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bloodpressuresystolic","title":"case bloodPressureSystolic","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bodyfatpercentage","title":"case bodyFatPercentage","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bodymass","title":"case bodyMass","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bodymassindex","title":"case bodyMassIndex","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/bodytemperature","title":"case bodyTemperature","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarybiotin","title":"case dietaryBiotin","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarycaffeine","title":"case dietaryCaffeine","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarycalcium","title":"case dietaryCalcium","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarycarbohydrates","title":"case dietaryCarbohydrates","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarychloride","title":"case dietaryChloride","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarycholesterol","title":"case dietaryCholesterol","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarychromium","title":"case dietaryChromium","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarycopper","title":"case dietaryCopper","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryenergyconsumed","title":"case dietaryEnergyConsumed","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryfatmonounsaturated","title":"case dietaryFatMonounsaturated","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryfatpolyunsaturated","title":"case dietaryFatPolyunsaturated","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryfatsaturated","title":"case dietaryFatSaturated","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryfattotal","title":"case dietaryFatTotal","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryfiber","title":"case dietaryFiber","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryfolate","title":"case dietaryFolate","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryiodine","title":"case dietaryIodine","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryiron","title":"case dietaryIron","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarymagnesium","title":"case dietaryMagnesium","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarymanganese","title":"case dietaryManganese","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarymolybdenum","title":"case dietaryMolybdenum","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryniacin","title":"case dietaryNiacin","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarypantothenicacid","title":"case dietaryPantothenicAcid","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryphosphorus","title":"case dietaryPhosphorus","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarypotassium","title":"case dietaryPotassium","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryprotein","title":"case dietaryProtein","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryriboflavin","title":"case dietaryRiboflavin","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryselenium","title":"case dietarySelenium","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarysodium","title":"case dietarySodium","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarysugar","title":"case dietarySugar","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarythiamin","title":"case dietaryThiamin","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitamina","title":"case dietaryVitaminA","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitaminb12","title":"case dietaryVitaminB12","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitaminb6","title":"case dietaryVitaminB6","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitaminc","title":"case dietaryVitaminC","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitamind","title":"case dietaryVitaminD","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitamine","title":"case dietaryVitaminE","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryvitamink","title":"case dietaryVitaminK","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietarywater","title":"case dietaryWater","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/dietaryzinc","title":"case dietaryZinc","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/distancecycling","title":"case distanceCycling","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/distancedownhillsnowsports","title":"case distanceDownhillSnowSports","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/distanceswimming","title":"case distanceSwimming","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/distancewalkingrunning","title":"case distanceWalkingRunning","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/distancewheelchair","title":"case distanceWheelchair","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/electrodermalactivity","title":"case electrodermalActivity","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/environmentalaudioexposure","title":"case environmentalAudioExposure","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/flightsclimbed","title":"case flightsClimbed","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/forcedexpiratoryvolume1","title":"case forcedExpiratoryVolume1","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/forcedvitalcapacity","title":"case forcedVitalCapacity","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/headphoneaudioexposure","title":"case headphoneAudioExposure","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/heartrate","title":"case heartRate","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/heartraterecoveryoneminute","title":"case heartRateRecoveryOneMinute","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/heartratevariabilitysdnn","title":"case heartRateVariabilitySDNN","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/height","title":"case height","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/inhalerusage","title":"case inhalerUsage","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/insulindelivery","title":"case insulinDelivery","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/leanbodymass","title":"case leanBodyMass","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/nikefuel","title":"case nikeFuel","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/numberofalcoholicbeverages","title":"case numberOfAlcoholicBeverages","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/numberoftimesfallen","title":"case numberOfTimesFallen","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/oxygensaturation","title":"case oxygenSaturation","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/peakexpiratoryflowrate","title":"case peakExpiratoryFlowRate","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/peripheralperfusionindex","title":"case peripheralPerfusionIndex","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/pushcount","title":"case pushCount","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/respiratoryrate","title":"case respiratoryRate","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/restingheartrate","title":"case restingHeartRate","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/runninggroundcontacttime","title":"case runningGroundContactTime","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/runningpower","title":"case runningPower","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/runningspeed","title":"case runningSpeed","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/runningstridelength","title":"case runningStrideLength","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/runningverticaloscillation","title":"case runningVerticalOscillation","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/sixminutewalktestdistance","title":"case sixMinuteWalkTestDistance","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/stairascentspeed","title":"case stairAscentSpeed","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/stairdescentspeed","title":"case stairDescentSpeed","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/stepcount","title":"case stepCount","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/swimmingstrokecount","title":"case swimmingStrokeCount","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/underwaterdepth","title":"case underwaterDepth","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/uvexposure","title":"case uvExposure","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/vo2max","title":"case vo2Max","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/waistcircumference","title":"case waistCircumference","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/walkingasymmetrypercentage","title":"case walkingAsymmetryPercentage","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/walkingdoublesupportpercentage","title":"case walkingDoubleSupportPercentage","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/walkingheartrateaverage","title":"case walkingHeartRateAverage","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/walkingspeed","title":"case walkingSpeed","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/walkingsteplength","title":"case walkingStepLength","type":"case"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/watertemperature","title":"case waterTemperature","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/quantitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantitytype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/quantitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/quantitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/quantitytype","title":"QuantityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/heartbeatseries","title":"case heartbeatSeries","type":"case"},{"path":"\/documentation\/digimehealthkit\/seriestype\/workoutroute","title":"case workoutRoute","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/seriestype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/seriestype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/seriestype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/seriestype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/seriestype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/seriestype","title":"SeriesType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/daily","title":"case daily","type":"case"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/hourly","title":"case hourly","type":"case"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/immediate","title":"case immediate","type":"case"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/weekly","title":"case weekly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/make(from:)","title":"static func make(from: Int) throws -> UpdateFrequency","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/updatefrequency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/updatefrequency\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/updatefrequency\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/updatefrequency","title":"UpdateFrequency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/visionprescription","title":"case visionPrescription","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/visionprescriptiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/visionprescriptiontype","title":"VisionPrescriptionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/workouttype","title":"case workoutType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimehealthkit\/workouttype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimehealthkit\/workouttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimehealthkit\/workouttype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/workouttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimehealthkit\/workouttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/workouttype","title":"WorkoutType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/foundation\/nspredicate\/allsamples","title":"static var allSamples: NSPredicate","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/foundation\/nspredicate\/activitysummarypredicate(datecomponents:)","title":"static func activitySummaryPredicate(dateComponents: DateComponents) -> NSPredicate","type":"method"},{"path":"\/documentation\/digimehealthkit\/foundation\/nspredicate\/activitysummarypredicatebetween(start:end:)","title":"static func activitySummaryPredicateBetween(start: DateComponents, end: DateComponents) -> NSPredicate","type":"method"},{"path":"\/documentation\/digimehealthkit\/foundation\/nspredicate\/samplespredicate(startdate:enddate:options:)","title":"static func samplesPredicate(startDate: Date, endDate: Date, options: HKQueryOptions) -> NSPredicate","type":"method"}],"path":"\/documentation\/digimehealthkit\/foundation\/nspredicate","title":"NSPredicate","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/foundation\/date\/formatted(with:timezone:)","title":"func formatted(with: String, timezone: TimeZone?) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/foundation\/date\/iso8601","title":"static var iso8601: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/foundation\/date\/make(from:)","title":"static func make(from: Double) -> Date","type":"method"}],"path":"\/documentation\/digimehealthkit\/foundation\/date","title":"Date","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/foundation\/datecomponents\/make(from:)","title":"static func make(from: [String : Any]) -> DateComponents","type":"method"}],"path":"\/documentation\/digimehealthkit\/foundation\/datecomponents\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimehealthkit\/foundation\/datecomponents","title":"DateComponents","type":"extension"}],"path":"\/documentation\/digimehealthkit\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkactivitymovemode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkactivitymovemode","title":"HKActivityMoveMode","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkbiologicalsex\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkbiologicalsex","title":"HKBiologicalSex","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkbloodtype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkbloodtype","title":"HKBloodType","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalue\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalue\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalue","title":"HKCategoryValue","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueappetitechanges\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueappetitechanges\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueappetitechanges","title":"HKCategoryValueAppetiteChanges","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueapplestandhour\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueapplestandhour\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueapplestandhour","title":"HKCategoryValueAppleStandHour","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueapplewalkingsteadinessevent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueapplewalkingsteadinessevent\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueapplewalkingsteadinessevent","title":"HKCategoryValueAppleWalkingSteadinessEvent","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluecervicalmucusquality\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluecervicalmucusquality\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluecervicalmucusquality","title":"HKCategoryValueCervicalMucusQuality","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluecontraceptive\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluecontraceptive\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluecontraceptive","title":"HKCategoryValueContraceptive","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueenvironmentalaudioexposureevent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueenvironmentalaudioexposureevent\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueenvironmentalaudioexposureevent","title":"HKCategoryValueEnvironmentalAudioExposureEvent","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueheadphoneaudioexposureevent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueheadphoneaudioexposureevent\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueheadphoneaudioexposureevent","title":"HKCategoryValueHeadphoneAudioExposureEvent","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluelowcardiofitnessevent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluelowcardiofitnessevent\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluelowcardiofitnessevent","title":"HKCategoryValueLowCardioFitnessEvent","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluemenstrualflow\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluemenstrualflow\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluemenstrualflow","title":"HKCategoryValueMenstrualFlow","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueovulationtestresult\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueovulationtestresult\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueovulationtestresult","title":"HKCategoryValueOvulationTestResult","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluepregnancytestresult\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluepregnancytestresult\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluepregnancytestresult","title":"HKCategoryValuePregnancyTestResult","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluepresence\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluepresence\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluepresence","title":"HKCategoryValuePresence","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueprogesteronetestresult\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueprogesteronetestresult\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueprogesteronetestresult","title":"HKCategoryValueProgesteroneTestResult","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueseverity\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueseverity\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvalueseverity","title":"HKCategoryValueSeverity","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluesleepanalysis\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluesleepanalysis\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkcategoryvaluesleepanalysis","title":"HKCategoryValueSleepAnalysis","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkfitzpatrickskintype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkfitzpatrickskintype","title":"HKFitzpatrickSkinType","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkvisionprescriptiontype\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkvisionprescriptiontype\/detail","title":"var detail: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkvisionprescriptiontype","title":"HKVisionPrescriptionType","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkworkoutactivitytype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkworkoutactivitytype","title":"HKWorkoutActivityType","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkworkouteventtype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkworkouteventtype","title":"HKWorkoutEventType","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkelectrocardiogram\/classification\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkelectrocardiogram\/classification","title":"HKElectrocardiogram.Classification","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/healthkit\/hkelectrocardiogram\/symptomsstatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkelectrocardiogram\/symptomsstatus","title":"HKElectrocardiogram.SymptomsStatus","type":"extension"}],"path":"\/documentation\/digimehealthkit\/healthkit\/hkelectrocardiogram","title":"HKElectrocardiogram","type":"extension"}],"path":"\/documentation\/digimehealthkit\/healthkit","title":"HealthKit","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/swift\/dictionary\/asmetadata","title":"var asMetadata: Metadata?","type":"property"},{"path":"\/documentation\/digimehealthkit\/swift\/dictionary\/sampletypepredicates","title":"var sampleTypePredicates: [HKSampleType : NSPredicate]","type":"property"}],"path":"\/documentation\/digimehealthkit\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/swift\/double\/asdate","title":"var asDate: Date","type":"property"},{"path":"\/documentation\/digimehealthkit\/swift\/double\/secondssince1970","title":"var secondsSince1970: Double","type":"property"}],"path":"\/documentation\/digimehealthkit\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/swift\/string\/boolean","title":"var boolean: Bool","type":"property"},{"path":"\/documentation\/digimehealthkit\/swift\/string\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/digimehealthkit\/swift\/string\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/digimehealthkit\/swift\/string\/objecttype","title":"var objectType: ObjectType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimehealthkit\/swift\/string\/asdate(format:timezone:)","title":"func asDate(format: String, timezone: TimeZone) -> Date?","type":"method"}],"path":"\/documentation\/digimehealthkit\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/digimehealthkit\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/digimehealthkit","title":"DigiMeHealthKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}