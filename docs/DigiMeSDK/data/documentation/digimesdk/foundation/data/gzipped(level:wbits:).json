{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"gzipped"},{"text":"(","kind":"text"},{"text":"level","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9DigiMeSDK16CompressionLevelV","text":"CompressionLevel"},{"kind":"text","text":", "},{"text":"wBits","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"}],"symbolKind":"method","extendedModule":"Foundation","modules":[{"relatedModules":["Foundation"],"name":"DigiMeSDK"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:10Foundation4DataV9DigiMeSDKE7gzipped5level5wBitsAcD16CompressionLevelV_s5Int32VtKF","title":"gzipped(level:wBits:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/Foundation\/Data\/gzipped(level:wBits:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" instance by compressing the receiver using zlib."},{"text":" ","type":"text"},{"type":"text","text":"Throws an error if compression failed."}],"variants":[{"paths":["\/documentation\/digimesdk\/foundation\/data\/gzipped(level:wbits:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"gzipped","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9DigiMeSDK16CompressionLevelV","kind":"typeIdentifier","text":"CompressionLevel","identifier":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/CompressionLevel"},{"text":" = .defaultCompression, ","kind":"text"},{"text":"wBits","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":" = Gzip.maxWindowBits + 16) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Compression level.","type":"text"}]}],"name":"level"},{"name":"wBits","content":[{"type":"paragraph","inlineContent":[{"text":"Manage the size of the history buffer.","type":"text"}]}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Gzip-compressed ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" instance."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"wBits","type":"codeVoice"},{"type":"text","text":" parameter allows for managing the size of the history buffer. The possible values are:"}]},{"code":["Value       Window size logarithm    Input","+9 to +15   Base 2                   Includes zlib header and trailer","-9 to -15   Absolute value of wbits  No header and trailer","+25 to +31  Low 4 bits of the value  Includes gzip header and trailing checksum"],"type":"codeListing","syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"GzipError","type":"codeVoice"}]}],"name":"Throws","style":"note","type":"aside"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK","doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/Foundation","doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/Foundation\/Data"]]},"references":{"doc://digimesdk.DigiMeSDK/documentation/DigiMeSDK/Foundation":{"type":"topic","identifier":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/Foundation","kind":"symbol","role":"collection","url":"\/documentation\/digimesdk\/foundation","abstract":[],"title":"Foundation"},"doc://digimesdk.DigiMeSDK/documentation/DigiMeSDK/Foundation/Data/gzipped(level:wBits:)":{"kind":"symbol","identifier":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/Foundation\/Data\/gzipped(level:wBits:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"gzipped","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"text":": ","kind":"text"},{"text":"CompressionLevel","kind":"typeIdentifier","preciseIdentifier":"s:9DigiMeSDK16CompressionLevelV"},{"kind":"text","text":", "},{"text":"wBits","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"}],"url":"\/documentation\/digimesdk\/foundation\/data\/gzipped(level:wbits:)","abstract":[{"type":"text","text":"Create a new "},{"code":"Data","type":"codeVoice"},{"text":" instance by compressing the receiver using zlib.","type":"text"},{"text":" ","type":"text"},{"text":"Throws an error if compression failed.","type":"text"}],"type":"topic","title":"gzipped(level:wBits:)","role":"symbol"},"doc://digimesdk.DigiMeSDK/documentation/DigiMeSDK/CompressionLevel":{"title":"CompressionLevel","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CompressionLevel","kind":"identifier"}],"role":"symbol","url":"\/documentation\/digimesdk\/compressionlevel","identifier":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/CompressionLevel","navigatorTitle":[{"text":"CompressionLevel","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Compression level whose rawValue is based on the zlibâ€™s constants."}]},"doc://digimesdk.DigiMeSDK/documentation/DigiMeSDK/Foundation/Data":{"kind":"symbol","abstract":[],"url":"\/documentation\/digimesdk\/foundation\/data","title":"Data","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Data"}],"type":"topic","identifier":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK\/Foundation\/Data"},"doc://digimesdk.DigiMeSDK/documentation/DigiMeSDK":{"identifier":"doc:\/\/digimesdk.DigiMeSDK\/documentation\/DigiMeSDK","title":"DigiMeSDK","role":"collection","url":"\/documentation\/digimesdk","abstract":[{"type":"text","text":"Digi.me - The Private Sharing Platform"}],"type":"topic","kind":"symbol"}}}